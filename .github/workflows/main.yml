name: Main Kittygram workflow
on:
  push:
    branches:
      - main
jobs:
  build_and_push_backend:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to docker hub
        uses: docker/build-push-action@v4
        with:
          context: ./fastapi_app/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ai_caller-backend:latest
  build_and_push_frontend:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./front/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ai_caller-frontend:latest

  build_and_push_gateway:
    name: Build and Push Gateway
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./gateway/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ai_caller-gateway:latest

  build_and_push_audio_socket:
    name: Build and Push AudioSocket
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./media_sockets/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ai_caller-audio_socket:latest

  deploy:
    name: Deploy app to host
    runs-on: ubuntu-latest
    needs:
      - build_and_push_audio_socket
      - build_and_push_frontend
      - build_and_push_gateway
      - build_and_push_backend
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: copy files to host
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.USER }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.production.yml"
          target: "ai_caller"
      - name: Execute remote commands with ssh conn
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.HOST_PASSWORD }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ai_caller
            echo "${{ secrets.HOST_PASSWORD }}" | sudo -S docker compose -f docker-compose.production.yml pull
            echo "${{ secrets.HOST_PASSWORD }}" | sudo -S docker compose -f docker-compose.production.yml up -d